Question 10: Create a Flutter application using Riverpod state management where pressing a button changes the background color of the appBar and Scaffold, as well as plays one of 10 music notes. 
Source Code:
import 'dart:math';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:audioplayers/audioplayers.dart';

// ------------------- Providers -------------------
final colorProvider = StateProvider<Color>((ref) => Colors.blue);
final noteProvider = StateProvider<int>((ref) => 1);

final random = Random();

// ------------------- Main -------------------
void main() {
  runApp(const ProviderScope(child: MyApp()));
}

class MyApp extends ConsumerWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final bgColor = ref.watch(colorProvider);
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: HomePage(bgColor: bgColor),
    );
  }
}

// ------------------- Home Page -------------------
class HomePage extends ConsumerWidget {
  final Color bgColor;
  const HomePage({super.key, required this.bgColor});

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final audioPlayer = AudioPlayer();

    void changeColorAndPlayNote() async {
      // Generate random color
      final newColor = Color.fromARGB(
        255,
        random.nextInt(256),
        random.nextInt(256),
        random.nextInt(256),
      );

      // Generate random note index (1 to 10)
      final noteIndex = random.nextInt(10) + 1;

      // Update Riverpod state
      ref.read(colorProvider.notifier).state = newColor;
      ref.read(noteProvider.notifier).state = noteIndex;

      // Play the note
      await audioPlayer.play(AssetSource('notes/note$noteIndex.wav'));
    }

    return Scaffold(
      backgroundColor: bgColor,
      appBar: AppBar(
        title: const Text('Riverpod Music App'),
        backgroundColor: bgColor,
      ),
      body: Center(
        child: ElevatedButton(
          onPressed: changeColorAndPlayNote,
          style: ElevatedButton.styleFrom(
            padding: const EdgeInsets.symmetric(horizontal: 30, vertical: 16),
          ),
          child: const Text(
            'Play Random Note & Change Color',
            style: TextStyle(fontSize: 18),
          ),
        ),
      ),
    );
  }
}
